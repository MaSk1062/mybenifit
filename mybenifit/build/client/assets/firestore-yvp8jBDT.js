import{q as d,w as n,e as r,o as w,f as u,u as f,g as y,h as p,i as l,j as S,k,T as D,l as m,m as A,n as o,p as g}from"./firebase-Db5tcxcc.js";const U={async createProfile(t){return(await p(r(o,"profiles"),{...t,createdAt:g()})).id},async updateProfile(t,e){const s=u(o,"profiles",t);await f(s,e)},async getProfile(t){const e=u(o,"profiles",t),s=await m(e);return s.exists()?{id:s.id,...s.data()}:null},async getProfileByEmail(t){const e=d(r(o,"profiles"),n("email","==",t)),s=await y(e);if(!s.empty){const a=s.docs[0];return{id:a.id,...a.data()}}return null},subscribeToProfile(t,e){const s=u(o,"profiles",t);return w(s,a=>{a.exists()?e({id:a.id,...a.data()}):e(null)})}},x={async createExtendedActivity(t){return(await p(r(o,"extendedActivities"),{...t,timestamp:g()})).id},async getExtendedActivitiesByUser(t){const e=d(r(o,"extendedActivities"),n("userId","==",t),l("date","desc"));return(await y(e)).docs.map(a=>({id:a.id,...a.data()}))},async updateExtendedActivity(t,e){const s=u(o,"extendedActivities",t);await f(s,e)},async deleteExtendedActivity(t){const e=u(o,"extendedActivities",t);await S(e)},subscribeToUserExtendedActivities(t,e){const s=d(r(o,"extendedActivities"),n("userId","==",t),l("date","desc"));return w(s,a=>{const i=a.docs.map(c=>({id:c.id,...c.data()}));e(i)})}},M={async createGoal(t){return(await p(r(o,"goals"),t)).id},async getGoalsByUser(t,e){let s=d(r(o,"goals"),n("userId","==",t),l("targetDate","desc"));return e!==void 0&&(s=d(r(o,"goals"),n("userId","==",t),n("achieved","==",e),l("targetDate","desc"))),(await y(s)).docs.map(i=>({id:i.id,...i.data()}))},async updateGoal(t,e){const s=u(o,"goals",t);await f(s,e)},async deleteGoal(t){const e=u(o,"goals",t);await S(e)},subscribeToUserGoals(t,e){const s=d(r(o,"goals"),n("userId","==",t),l("targetDate","desc"));return w(s,a=>{const i=a.docs.map(c=>({id:c.id,...c.data()}));e(i)})}},T={async createWorkout(t){return(await p(r(o,"workouts"),t)).id},async getWorkoutsByUser(t,e=50){const s=d(r(o,"workouts"),n("userId","==",t),l("date","desc"),A(e));return(await y(s)).docs.map(i=>({id:i.id,...i.data()}))},async getWorkout(t){const e=u(o,"workouts",t),s=await m(e);return s.exists()?{id:s.id,...s.data()}:null},async updateWorkout(t,e){const s=u(o,"workouts",t);await f(s,e)},async deleteWorkout(t){const e=u(o,"workouts",t);await S(e)},subscribeToUserWorkouts(t,e){const s=d(r(o,"workouts"),n("userId","==",t),l("date","desc"));return w(s,a=>{const i=a.docs.map(c=>({id:c.id,...c.data()}));e(i)})}},I={async createDailyMetrics(t){return(await p(r(o,"dailyMetrics"),{...t,createdAt:g()})).id},async getDailyMetrics(t,e){const s=d(r(o,"dailyMetrics"),n("userId","==",t),n("date","==",e)),a=await y(s);if(!a.empty){const i=a.docs[0];return{id:i.id,...i.data()}}return null},async updateDailyMetrics(t,e){const s=u(o,"dailyMetrics",t);await f(s,e)},async getWeeklyMetrics(t,e,s){const a=d(r(o,"dailyMetrics"),n("userId","==",t),n("date",">=",e),n("date","<=",s),l("date","asc"));return(await y(a)).docs.map(c=>({id:c.id,...c.data()}))},async createUserSettings(t){return(await p(r(o,"userSettings"),{...t,createdAt:g(),updatedAt:g()})).id},async getUserSettings(t){const e=d(r(o,"userSettings"),n("userId","==",t)),s=await y(e);if(!s.empty){const a=s.docs[0];return{id:a.id,...a.data()}}return null},async updateUserSettings(t,e){const s=u(o,"userSettings",t);await f(s,{...e,updatedAt:g()})},subscribeToUserSettings(t,e){const s=d(r(o,"userSettings"),n("userId","==",t));return w(s,a=>{if(a.empty)e(null);else{const i=a.docs[0];e({id:i.id,...i.data()})}})},subscribeToDailyMetrics(t,e,s){const a=d(r(o,"dailyMetrics"),n("userId","==",t),n("date","==",e));return w(a,i=>{if(i.empty)s(null);else{const c=i.docs[0];s({id:c.id,...c.data()})}})},async getDashboardData(t){const e=new Date().toISOString().split("T")[0],s=new Date;s.setDate(s.getDate()-s.getDay());const a=s.toISOString().split("T")[0],i=new Date().toISOString().split("T")[0],[c,R,h,q,v]=await Promise.all([this.getDailyMetrics(t,e),this.getWeeklyMetrics(t,a,i),x.getExtendedActivitiesByUser(t),M.getGoalsByUser(t),this.getUserSettings(t)]);return{todayMetrics:c,weeklyData:R,recentActivities:h.slice(0,10),userGoals:q,userSettings:v}}},E={toTimestamp(t){return D.fromDate(t)},toDate(t){return t.toDate()},now(){return D.now()},async batchCreate(t,e){const s=k(o);e.forEach(a=>{const i=a(r(o,t));s.set(i,a)}),await s.commit()},getWeekRange(t=new Date){const e=new Date(t);e.setDate(e.getDate()-e.getDay()),e.setHours(0,0,0,0);const s=new Date(e);return s.setDate(s.getDate()+6),s.setHours(23,59,59,999),{start:e,end:s}},getMonthRange(t=new Date){const e=new Date(t.getFullYear(),t.getMonth(),1),s=new Date(t.getFullYear(),t.getMonth()+1,0,23,59,59,999);return{start:e,end:s}}};export{I as d,x as e,E as f,M as g,U as p,T as w};
